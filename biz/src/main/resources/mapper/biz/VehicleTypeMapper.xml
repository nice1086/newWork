<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.biz.mapper.VehicleTypeMapper">
        <select id="selectType1" resultType="map">
SELECT
	IFNULL(out_counts.count, 0) AS isout,
    IFNULL(in_counts.count, 0) AS isin,
    DATE_FORMAT(all_hours.cross_time,'%Y-%m-%d %H') AS cross_time
FROM
    (SELECT DISTINCT CONCAT(DATE(NOW()), ' ', hours.hours) AS cross_time
     FROM
         (SELECT '00' AS hours
          UNION ALL SELECT '01' UNION ALL SELECT '02' UNION ALL SELECT '03'UNION ALL SELECT '04' UNION ALL SELECT '05'
          UNION ALL SELECT '06' UNION ALL SELECT '07'UNION ALL SELECT '08' UNION ALL SELECT '09' UNION ALL SELECT '10'
          UNION ALL SELECT '11'UNION ALL SELECT '12' UNION ALL SELECT '13' UNION ALL SELECT '14' UNION ALL SELECT '15'
          UNION ALL SELECT '16' UNION ALL SELECT '17' UNION ALL SELECT '18' UNION ALL SELECT '19'UNION ALL SELECT '20'
          UNION ALL SELECT '21' UNION ALL SELECT '22' UNION ALL SELECT '23') AS hours
     ) AS all_hours
LEFT JOIN
    (SELECT CONCAT(DATE_FORMAT(cross_time, '%Y-%m-%d'), ' ', DATE_FORMAT(cross_time, '%H')) AS cross_time, COUNT(vehicle_out = 0 OR NULL) AS count
     FROM t_vehicle_record
     WHERE DATE(cross_time) = DATE(NOW()) AND vehicle_out = 0 AND (#{vehicle_type} IS NULL OR vehicle_type = #{vehicle_type})
     GROUP BY DATE_FORMAT(cross_time, '%Y-%m-%d %H')
     ) AS in_counts ON all_hours.cross_time = in_counts.cross_time
LEFT JOIN
    (SELECT CONCAT(DATE_FORMAT(cross_time, '%Y-%m-%d'), ' ', DATE_FORMAT(cross_time, '%H')) AS cross_time,
		COUNT(vehicle_out = 1 OR NULL) AS count
     FROM t_vehicle_record
     WHERE DATE(cross_time) = DATE(NOW()) AND vehicle_out = 1 AND (#{vehicle_type} IS NULL OR vehicle_type = #{vehicle_type})
     GROUP BY DATE_FORMAT(cross_time, '%Y-%m-%d %H')

     ) AS out_counts ON all_hours.cross_time = out_counts.cross_time
ORDER BY all_hours.cross_time ASC;
        </select>

    <select id="selectType2" resultType="map">
         SELECT
    COUNT(DISTINCT CASE WHEN t1.vehicle_out = 1 THEN CONCAT(t1.vehicle_type, t1.cross_time) END) AS isout,
    COUNT(DISTINCT CASE WHEN t1.vehicle_out = 0 THEN CONCAT(t1.vehicle_type, t1.cross_time) END) AS isin,
	DATE_FORMAT(d.date,'%Y-%m-%d') AS cross_time
FROM
    (
        SELECT
            DATE(DATE_SUB(CURDATE(), INTERVAL n.number DAY)) AS date
        FROM
            (SELECT 0 AS number UNION ALL
             SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL
             SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL
             SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) n
        WHERE
            DATE(DATE_SUB(CURDATE(), INTERVAL n.number DAY)) >= DATE_SUB(CURDATE(), INTERVAL 3 DAY)
    ) d
LEFT JOIN
    t_vehicle_record t1 ON DATE(t1.cross_time) = d.date
            AND (
        #{vehicle_type} IS NULL OR
        t1.vehicle_type = #{vehicle_type}
        )
GROUP BY
    d.date;
        </select>

    <select id="selectType3" resultType="map">
       SELECT
    COUNT(DISTINCT CASE WHEN t1.vehicle_out = 1 THEN CONCAT(t1.vehicle_type, t1.cross_time) END) AS isout,
    COUNT(DISTINCT CASE WHEN t1.vehicle_out = 0 THEN CONCAT(t1.vehicle_type, t1.cross_time) END) AS isin,
    DATE_FORMAT(d.date,'%Y-%m-%d') AS cross_time
FROM
    (
        SELECT
            DATE(DATE_SUB(CURDATE(), INTERVAL n.number DAY)) AS date
        FROM
             (SELECT (a.number + b.number + c.number + d.number + e.number) AS number
             FROM
                (SELECT 0 AS number UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4) a,
                (SELECT 0 AS number UNION ALL SELECT 5 UNION ALL SELECT 10 UNION ALL SELECT 15 UNION ALL SELECT 20) b,
                (SELECT 0 AS number UNION ALL SELECT 25 UNION ALL SELECT 30 UNION ALL SELECT 35 UNION ALL SELECT 40) c,
                (SELECT 0 AS number UNION ALL SELECT 45 UNION ALL SELECT 50 UNION ALL SELECT 55 UNION ALL SELECT 60) d,
                (SELECT 0 AS number UNION ALL SELECT 65 UNION ALL SELECT 70 UNION ALL SELECT 75 UNION ALL SELECT 80) e
            ) n
        WHERE
            DATE(DATE_SUB(CURDATE(), INTERVAL n.number DAY)) >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
    ) d
LEFT JOIN
    t_vehicle_record t1 ON DATE(t1.cross_time) = d.date

       AND (
        #{vehicle_type} IS NULL OR
        t1.vehicle_type = #{vehicle_type}
        )
        GROUP BY
    d.date;
        </select>


    <select id="selectType4" resultType="map">
        SELECT
        COUNT(t_vehicle_record.vehicle_out = 1 OR NULL) AS isout,
        COUNT(t_vehicle_record.vehicle_out = 0 OR NULL) AS isin,
        DATE_FORMAT(date_range.date,'%Y-%m-%d') AS cross_time
        FROM
        (
        SELECT
        DATE(#{start_time}) + INTERVAL (units.a + tens.a*10 + hundreds.a*100) DAY AS date
        FROM
        (SELECT 0 AS a UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) units,
        (SELECT 0 AS a UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) tens,
        (SELECT 0 AS a UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) hundreds
        WHERE
        DATE(#{start_time}) + INTERVAL (units.a + tens.a*10 + hundreds.a*100) DAY &lt;= #{end_time}
        ) date_range
        LEFT JOIN
        t_vehicle_record ON DATE(t_vehicle_record.cross_time) = date_range.date
        AND (
        #{vehicle_type} IS NULL OR
        t_vehicle_record.vehicle_type = #{vehicle_type}
        )
        GROUP BY
        date_range.date;
        </select>
</mapper>